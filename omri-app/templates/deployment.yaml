apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Values.namespace | default "default" }}
  labels:
    app: {{ .Release.Name }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
    spec:
      serviceAccountName: {{ .Release.Name }}-service-account
      terminationGracePeriodSeconds: 0
      volumes:
        - name: secret-volume
          emptyDir: {}
      initContainers:
        - name: fetch-db-credentials
          image: amazon/aws-cli:latest
          command: ["sh", "-c"]
          args:
            - >
              aws secretsmanager get-secret-value --secret-id '{{ .Values.database.secretArn }}' --query 'SecretString' --output text > /mnt/secrets/db_credentials;
          volumeMounts:
            - name: secret-volume
              mountPath: /mnt/secrets
      containers:
        - name: {{ .Release.Name }}
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          volumeMounts:
            - name: secret-volume
              mountPath: /mnt/secrets
          env:
            - name: DB_HOST
              value: {{ .Values.database.host }}
            - name: MYSQL_DATABASE
              value: {{ .Values.database.name }}
          command: ["/bin/bash", "-c"]
          args:
            - |
              echo "starting container"
              DB_CREDENTIALS=$(cat /mnt/secrets/db_credentials)
              export DB_CREDENTIALS
              echo "DB_CREDENTIALS loaded"
              exec python3 main.py
          resources:
            requests:
              cpu: {{ .Values.resources.requests.cpu }}
